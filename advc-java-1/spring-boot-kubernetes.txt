spring boot-kubernetes

What is kubernetes?

-	Kubernetes is server manager which manages servers in cloud.

-	Kubernetes calls these servers as nodes.

-	There are two types of nodes master node and worker node.

-	These two types of nodes together are called as cluster.

-	The master node is responsible to manage one or more worker nodes.

-	The worker node is responsible to run our application.

-	Kubernetes follow once concept one responsibility principle.

How to execute kubernetes commands?

-	To execute kubernetes commands we need to connect to cluster first.

-	In google cloud click on the cluster hyper link to open cluster details in new browser window.

-	In this window on top right hand side select icon that says activate cloud shell.

-	We can open cloud shell in new browser window by using new window icon on top right hand side of the cloud shell window.

-	Again in the cluster browser window on top right hand side click icon which says connect and copy the command from prompt window.

-	Paste this command in cloud shell window in new browser window and press enter.

	syntax:
	
	#gcloud container clusters get-credentials [name] --zone [name] --project [name]
	
	example:
	
	#gcloud container clusters get-credentials shubhdes-1 --zone us-central1-a --project solid-course-258105

-	This will connect you to the kubernetes cluster.

-	All kubernetes commands require kubectl binary to be installed, in google cloud shell this binary is already installed.

-	The word kubectl stands for kubernetes controller. 

	example:
	
	#kubectl --version
	
How to deploy an application using kubernetes?

-	To deploy docker image into cluster we need to use the following command.

-	This command will require the docker image to be present inside the docker hub.ss

	syntax:

	#kubectl create deployment [name] --image=[name]

	example:

	#kubectl create deployment my-app --image=shubhdes/my-app:1.0

-	Once the deployment is completed it is necessary to expose it to external system using the following command.

-	External system will be using the deployed application.	

	syntax:
	
	#kubectl expose deployment [name] --type=[type] --port=[port]
	
	example:
	
	#kubectl expose deployment my-app --type=LoadBalance --port=8080
	
What is a pod in kubernetes?

-	In kubernetes smallest deployable unit is pod.

-	One or more containers live inside a pod.

-	One or more pods live inside a container.

-	To view all available pods inside cluster we need to use following command.

	example:

	#kubectl get pods

-	To view all details of specific pod inside cluster we need to use following command.

	syntax:

	#kubectl describe pod [name]	
	
	example:

	#kubectl describe pod my-app-12sbeha-206yh

-	To remove a running pod	inside cluster we need to use following command.

	syntax:

	#kubectl delete pod [name]	
	
	example:

	#kubectl delete pod my-app-12sbeha-206yh 
	
What is a replicaset in kubernetes?

-	In kubernetes replicaset ensures that specific number of pods are always running.

-	We can set the minimum number of pod instance that must be running at any given time using following command.

	syntax:

	#kubectl scale deployment [name] --replicas=[n]
	
	example:

	#kubectl scale deployment my-app --replicas=3

What is a deployment in kubernetes?

-	Consider we have a deployment that is running an image of my-app version 1.0.

-	To deploy an image of same my-app with version 2.0 we need to undeploy the image with version 1.0.

-	We need to ensure that we have total zero downtime during this undeployment and redeployment.

-	To set new image to an existing deployment we need to use the following command.

	syntax:

	#kubectl scale deployment my-app --image=[container=image] 
	
	example:

	#kubectl scale deployment my-app --image=my-app=shubhdes/my-app:2.0
	
-	Everytime deployment is created or update a new replicaset is created.

-	When deployment is updated and replicaset of new deployment has one pod running then replicaset of older deployment removes one pod.

-	Also when replicaset of new deployment has second pod running then replicaset of old deployment will scale down second pod.

-	In this manner replicaset of old deployment removes all pods when replicaset of new deployment has all pods running.

-	This deployment startegy is called rolling update.

-	But when the deployment is updated and it is failed the replicaset of older deployment continue to work.

-	This will ensure total zero downtime during this undeployment and redeployment.

What are events in kubernetes?

-	Whenver an deployment, pod, replicaset and service is created or updated or deleted these actions are called as events.

-	To view all events that were generated in kubernetes we need to use the following command.

	example:
	
	#kubectl get events
	
-	We can also sort the events by timestamp of their occurence using the following command.

	example:
	
	#kubectl get events --sort-by=.metadata.creationTimestamp	